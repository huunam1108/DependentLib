apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.mobbeel.plugin'

group='com.github.huunam1108'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
//    sourceSets {
//        main.java.srcDirs += 'src/main/java'
//        androidTest.java.srcDirs += 'src/androidTest/java'
//        androidTest.resources.srcDirs += 'src/androidTest/res'
//    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha03'
}

aarPlugin {
    includeAllInnerDependencies false
}

//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.sourceFiles
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//


//task classesJar(type: Jar) {
//    baseName = project.name
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.javaDirectories
//}

//artifacts {
//    archives file: file('libs/mux-r2.8.0.aar'), name: 'external-lib', type: 'aar'
////    archives sourcesJar
////    archives classesJar
//}
//
//install {
//    repositories {
//        mavenInstaller {
//            addFilter('mux-r2.8.0') { artifact, file ->
//                artifact.name == 'external-lib'
//            }
//            addFilter('dependentlib') { artifact, file ->
//                artifact.name == 'dependentlib'
//            }
//        }
//    }
//}
